version: '3.8'

services:
  finstat-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: finstat-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: finstat-db
    environment:
      POSTGRES_DB: finstat
      POSTGRES_USER: finstat
      POSTGRES_PASSWORD: finstat
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finstat -d finstat -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: finstat-api
    environment:
      DATABASE_URL: postgresql://finstat:finstat@db:5432/finstat
      VAPID_PUBLIC_KEY: BAbsOGDUh-rAyT_OoHsJOudGJoH-3spFpJAGR6jIzNcMkt65kyLacbil2oyoNrSkLr9FNyZReIzNRsYdiIfhRsQ
      VAPID_PRIVATE_KEY: GIaAFh69A2XTfF-QcCc87QR9xchBdJ9eYkgXGGFHY24
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4000/api/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

volumes:
  postgres_data:
    driver: local 