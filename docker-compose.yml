version: '3.8'

services:
  # Основное приложение FinStat
  finstat-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: finstat-app
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./dev.db
    volumes:
      - finstat_data:/app/data
    restart: unless-stopped
    networks:
      - finstat-network

  # Nginx для load balancing (опционально)
  nginx-proxy:
    image: nginx:alpine
    container_name: finstat-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - finstat-app
    restart: unless-stopped
    networks:
      - finstat-network

  # PostgreSQL для production (опционально)
  postgres:
    image: postgres:15-alpine
    container_name: finstat-postgres
    environment:
      POSTGRES_DB: finstat
      POSTGRES_USER: finstat_user
      POSTGRES_PASSWORD: finstat_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - finstat-network

  # Redis для кэширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: finstat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - finstat-network
    command: redis-server --appendonly yes

volumes:
  finstat_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  finstat-network:
    driver: bridge 